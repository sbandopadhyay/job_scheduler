#!/bin/bash

# Directory setup
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
MODULES_DIR="$SCRIPT_DIR/modules"
CONFIG_FILE="$SCRIPT_DIR/job_scheduler.config"
SCHEDULER_LOG="$SCRIPT_DIR/scheduler.log"

# Log function
log_action() { echo "$(date '+%Y-%m-%d %H:%M:%S') - $*" >> "$SCHEDULER_LOG"; }

# Load custom config if provided
if [[ "$1" == "--config" ]]; then
    if [[ -f "$2" ]]; then
        CONFIG_FILE="$2"
        shift 2
    else
        echo "❌ Error: Config file '$2' not found."
        exit 1
    fi
fi

# Ensure config file exists
if [[ ! -f "$CONFIG_FILE" ]]; then
    cat <<EOF > "$CONFIG_FILE"
# CONFIG FILE: job_scheduler.config
JOB_DIR=\$HOME/job_logs
QUEUE_DIR=\$JOB_DIR/queue
ARCHIVE_DIR=\$JOB_DIR/archive
MAX_CONCURRENT_JOBS=4
ARCHIVE_THRESHOLD=100
LOG_FILE_NAME="job_XXX.log"
WATCH_REFRESH_INTERVAL=3
EOF
    echo "✅ Default config file created: $CONFIG_FILE"
fi

# Load config
source "$CONFIG_FILE"

# Ensure directories exist
mkdir -p "$JOB_DIR" || { echo "❌ Failed to create $JOB_DIR"; exit 1; }
mkdir -p "$QUEUE_DIR" || { echo "❌ Failed to create $QUEUE_DIR"; exit 1; }
mkdir -p "$ARCHIVE_DIR" || { echo "❌ Failed to create $ARCHIVE_DIR"; exit 1; }

# Execute the corresponding module
case "$1" in
    "-srun") source "$MODULES_DIR/core/srun.mod" "$2" ;;
    "-qrun") source "$MODULES_DIR/core/qrun.mod" "$2" ;;
    "-status") source "$MODULES_DIR/monitoring/status.mod" ;;
    "-list") source "$MODULES_DIR/monitoring/list.mod" ;;
    "-kill") source "$MODULES_DIR/control/kill.mod" "$2" ;;
    "-archive") source "$MODULES_DIR/control/archive.mod" ;;
    "-watch") source "$MODULES_DIR/monitoring/watch.mod" "$2" ;;
    "--help") source "$MODULES_DIR/help.mod" ;;
    *)
        echo "❌ Unrecognized command: '$1'. Run 'job_scheduler --help' for usage info."
        exit 1
        ;;
esac

# Process queue after commands that might affect it
[[ "$1" =~ ^(-qrun|-kill|-archive)$ ]] && source "$MODULES_DIR/utilities/queue.mod"